<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Шаблон Ortan</name>
    <code>ortan-theme</code>
    <version>1.0</version>
    <author>https://pixelmax.com</author>
    <link>https://pixelmax.com</link>
    <file path="catalog/controller/checkout/cart.php">
        <operation>
            <search>
                <![CDATA[if (isset($this->request->post['quantity']) && ((int)$this->request->post['quantity'] >= $product_info['minimum'])) {]]>
            </search>
            <add position="replace">
                <![CDATA[if (isset($this->request->post['quantity']) && ((int)$this->request->post['quantity'] >= $product_info['minimum'] || (int)$this->request->post['quantity'] <= -$product_info['minimum'])) {]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['name'      => $product['name'],]]>
            </search>
            <add position="after">
                <![CDATA[
            'product_id'   => $product['product_id'],
            'minimum'   => $product['minimum'],
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/information/contact.php">
        <operation>
            <search>
                <![CDATA[$_['heading_title']  = 'Связаться с нами';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['heading_title']  = 'Контакты';]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$_['text_telephone'] = 'Телефон';]]>
            </search>
            <add position="after">
                <![CDATA[$_['text_fax']       = 'Дополнительный';]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$_['text_telephone'] = 'Телефон';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_fax']       = 'Городской';]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$_['text_fax']       = 'Факс';]]>
            </search>
            <add position="after">
                <![CDATA[
            $_['text_email']  = 'Основной';
            $_['text_email2']  = 'Дополнительный';
            $_['text_viber']  = 'Viber';
            $_['text_watsapp']  = 'WatsApp';
            $_['text_telegram']  = 'Telegram';]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$_['text_fax']       = 'Факс';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_fax']       = 'Дополнительный';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/information/contact.php">
        <operation>
            <search position="0">
                <![CDATA[$data['text_telephone'] = $this->language->get('text_telephone');]]>
            </search>
            <add position="after">
                <![CDATA[
            $data['text_email'] = $this->language->get('text_email');
            $data['text_email2'] = $this->language->get('text_email2');
            $data['text_viber'] = $this->language->get('text_viber');
            $data['text_watsapp'] = $this->language->get('text_watsapp');
            $data['text_telegram'] = $this->language->get('text_telegram');]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA['telephone'   => $location_info['telephone'],]]>
            </search>
            <add position="after">
                <![CDATA[
            'email'   => $location_info['email'],
            'email2'   => $location_info['email2'],
            'viber'   => $location_info['viber'],
            'watsapp'   => $location_info['watsapp'],
            'telegram'   => $location_info['telegram'],
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/product/product.php">
        <operation>
            <search position="0">
                <![CDATA[$_['text_instock']                            = 'На складе';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_instock']                            = 'В наличии';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/ru-ru.php">
        <operation>
            <search position="0">
                <![CDATA[$_['text_home']             = '<i class="fa fa-home"></i>';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_home']             = 'Главная';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/common/cart.php">
        <operation>
            <search position="0">
                <![CDATA[$_['text_items']     = '%s товар(ов) - %s';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_items']     = '%s';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/checkout/cart.php">
        <operation>
            <search position="0">
                <![CDATA[$_['text_items']               = '%s товар(ов) - %s';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_items']     = '%s';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/extension/total/total.php">
        <operation>
            <search position="0">
                <![CDATA[$_['text_total'] = 'Итого';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['text_total'] = 'Всего';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/common/header.php">
        <operation>
            <search position="0">
                <![CDATA[public function index() {]]>
            </search>
            <add position="after">
                <![CDATA[global $javaScripts; $javaScripts = [];]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['cart'] = $this->load->controller('common/cart');]]>
            </search>
            <add position="after">
                <![CDATA[$data['header_bottom'] = $this->load->controller('common/header_bottom');]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[public function index()]]>
            </search>
            <add position="before">
                <![CDATA[
	private function buildCategoriesList(&$categoriesList, $categories, $level = 0)
	{
		foreach ($categories as $category) {
			if (!$level) {
				$categoriesList .= '<li class="nav__item nav__item_curs nav__item_submenu h-mobile">';
				$categoriesList .= '<svg class="nav__submenuIcon" width="18" height="14" viewBox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M17.1021 13.5361H5.06562C4.56953 13.5361 4.16746 13.134 4.16746 12.6379C4.16746 12.1418 4.56953 11.7397 5.06562 11.7397H17.1018C17.5979 11.7397 18 12.1418 18 12.6379C18 13.134 17.5982 13.5361 17.1021 13.5361Z"/><path d="M17.1021 7.89831H5.06562C4.56953 7.89831 4.16746 7.49623 4.16746 7.00015C4.16746 6.50407 4.56953 6.10199 5.06562 6.10199H17.1018C17.5979 6.10199 18 6.50407 18 7.00015C18.0003 7.49623 17.5982 7.89831 17.1021 7.89831Z"/><path d="M17.1021 2.26058H5.06562C4.56953 2.26058 4.16746 1.85851 4.16746 1.36242C4.16746 0.86634 4.56953 0.464264 5.06562 0.464264H17.1018C17.5979 0.464264 18 0.86634 18 1.36242C18 1.85851 17.5982 2.26058 17.1021 2.26058Z"/><path d="M1.20623 2.6381C1.87241 2.6381 2.41245 2.09806 2.41245 1.43187C2.41245 0.765693 1.87241 0.225647 1.20623 0.225647C0.540046 0.225647 0 0.765693 0 1.43187C0 2.09806 0.540046 2.6381 1.20623 2.6381Z"/><path d="M1.20623 8.2064C1.87241 8.2064 2.41245 7.66635 2.41245 7.00017C2.41245 6.33399 1.87241 5.79395 1.20623 5.79395C0.540046 5.79395 0 6.33399 0 7.00017C0 7.66635 0.540046 8.2064 1.20623 8.2064Z"/><path d="M1.20623 13.7747C1.87241 13.7747 2.41245 13.2346 2.41245 12.5684C2.41245 11.9023 1.87241 11.3622 1.20623 11.3622C0.540046 11.3622 0 11.9023 0 12.5684C0 13.2346 0.540046 13.7747 1.20623 13.7747Z"/></svg>';
				$categoriesList .= '<a href="' . $category['href'] . '" class="nav__link">' . $category['name'] . ' </a>';
				$categoriesList .= '<div class="nav__arrow nav__arrow_mob"></div>';
				$categoriesList .= '<ul class="header__submenu mainMenu">';
				if (count($category['children'])) {
					$this->buildCategoriesList($categoriesList, $category['children'], $level = 1);
				}
				$categoriesList .= '</ul>';
				$categoriesList .= '</li>';
			} else {
				if (!count($category['children'])) {
					$categoriesList .= '<li class="mainMenu__item">';
					$categoriesList .= '<a href="' . $category['href'] . '" class="mainMenu__link">' . $category['name'] . ' </a>';
					$categoriesList .= '</li>';
				} else {
					$categoriesList .= '<li class="mainMenu__item nav__item_submenu">';
					$categoriesList .= '<a href="' . $category['href'] . '" class="mainMenu__link"><span>' . $category['name'] . '</span><div class="nav__arrow"></div></a>';
					$categoriesList .= '<ul class="mainMenu__submenu linkMenu mainMenu">';
					$this->buildCategoriesList($categoriesList, $category['children'], $level = 1);
					$categoriesList .= '</ul>';
					$categoriesList .= '</li>';
				}
			}
		}
	}
	private function buildMobileCategoriesList(&$categoriesList, $categories, $level = 0)
	{
		foreach ($categories as $category) {
			if (!$level) {
				$this->buildMobileCategoriesList($categoriesList, $category['children'], $level = 1);
			} else {
				if (!count($category['children'])) {
					$categoriesList .= '<li class="nav__item v-mobile">';
					$categoriesList .= '<a href="' . $category['href'] . '" class="nav__link">' . $category['name'] . ' </a>';
					$categoriesList .= '</li>';
				} else {
					$categoriesList .= '<li class="nav__item nav__item_curs nav__item_submenu v-mobile">';
					$categoriesList .= '<a href="' . $category['href'] . '" class="nav__link"><span>' . $category['name'] . '</span><div class="nav__arrow"></div></a>';
					$categoriesList .= '<ul class="mainMenu__submenu linkMenu mainMenu">';
					$this->buildMobileCategoriesList($categoriesList, $category['children'], $level = 1);
					$categoriesList .= '</ul>';
					$categoriesList .= '</li>';
				}
			}
		}
	}
    ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$categories = $this->model_catalog_category->getCategories(0);]]>
            </search>
            <add position="replace">
                <![CDATA[$categories = [];]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['cart'] = $this->load->controller('common/cart');]]>
            </search>
            <add position="after">
                <![CDATA[
           
                $data['categoriesList']  = "";
                $cates = [];
                $cit = CITY_CODE;
    
                $cates = $this->cache->get('categories.tree.header.' . (int)$this->config->get('config_language_id').'.'.$cit);
                if (empty($cates)) {
                    $cates = $this->model_catalog_category->getCategoriesTree();
                    $this->cache->set('categories.tree.header.' . (int)$this->config->get('config_language_id').'.'.$cit, $cates);
                }
                
                $this->buildCategoriesList($data['categoriesList'], $cates);
                $this->buildMobileCategoriesList($data['categoriesList'], $cates);
        ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[return $this->load->view('common/header', $data);]]>
            </search>
            <add position="before">
                <![CDATA[
            $data['body_id'] = '';
            $data['class']  = 'innPage';
            if (isset($this->request->get['route'])) {
                if ($this->request->get['route'] == 'common/home') {
                    $data['class'] = 'mainPage';
                } else  {
                    if ($this->request->get['route'] == 'product/product') {
                        $data['body_id'] = 'id="productPage"';
                    } elseif ($this->request->get['route'] == 'product/category') {
                        $data['body_id'] = 'id="catalogPage"';
                    }
                    $data['dark'] = 1;
                }
            } else {
                $data['class'] = 'mainPage';
            }
        ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['styles'] = $this->document->getStyles();]]>
            </search>
            <add position="after">
                <![CDATA[
        $data['text_compare'] = isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0;]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['text_wishlist'] = sprintf($this->language->get('text_wishlist'), (isset($this->session->data['wishlist']) ? count($this->session->data['wishlist']) : 0));]]>
            </search>
            <add position="replace">
                <![CDATA[$data['text_wishlist'] = "";]]>
            </add>
        </operation>


    </file>
    <file path="catalog/model/catalog/category.php">
        <operation>
            <search position="0">
                <![CDATA[public function getCategoryFilters($category_id)]]>
            </search>
            <add position="before">
                <![CDATA[

	public function getCategoriesTree(&$parent = null)
	{
		if (!$parent)
			$catQuery = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE c.category_id = '59' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND cd.city_id = '" . CITY_ID . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "'  AND c.status = '1' ORDER BY c.sort_order, LCASE(cd.name)");
		else
			$catQuery = $this->db->query("SELECT * FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) WHERE  c.parent_id = '" . (int)$parent['category_id'] . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "'  AND cd.city_id = '" . CITY_ID . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "'  AND c.status = '1' ORDER BY c.sort_order, LCASE(cd.name)");
		$category = null;
		foreach ($catQuery->rows as $result) {
			$category = array(
				'category_id'     => $result['category_id'],
				'name'     => $result['menu_name'] ? $result['menu_name'] : $result['name'],
				'children'     => [],
				'column'   => $result['column'] ? $result['column'] : 1,
				'href'     => $this->url->link('product/category', 'path=' . $result['category_id'])
			);
			$this->getCategoriesTree($category);
			$parent['children'][] = $category;
		}
		return [$category];
	}
]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/information/contact.php">
        <operation>
            <search>
                <![CDATA[$this->response->setOutput($this->load->view('information/contact', $data));]]>
            </search>
            <add position="before">
                <![CDATA[
            $this->load->model('extension/module/citychooser/city');
            $data['locations']=[];
            
            foreach((array)$this->model_extension_module_citychooser_city->getBaseCities(15) as $city) {
                    $data['locations'][] = array(
                        'city_id' => $city['city_id'],
                        'phone' => $city['phone'],
                        'add_phone'        => $city['add_phone'],
                        'email'        => $city['email'],
                        'add_email'        => $city['add_email'],
                        'whatsapp'        => $city['whatsapp'],
                        'telegram'        => $city['telegram'],
                        'viber'     => $city['viber'],
                        'geo_lat'     => $city['geo_lat'],
                        'geo_lon'   => $city['geo_lon'],
                        'city'         => nl2br($city['city']),
                        'address'        => nl2br($city['address']),
                        'schedule'     => nl2br($city['schedule'])
                    );
            }

            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/bestseller.php">
        <operation>
            <search position="0">
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}
					$stock = $result['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}
                ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA['name'        => $result['name'],]]>
            </search>
            <add position="after">
                <![CDATA[
            'stock_status' => $stock,
            'novelty' => $result['novelty'],
            'bestseller' => $bestseller,
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/extension/module/bestseller.php">
        <operation>
            <search>
                <![CDATA[$_['heading_title'] = 'Хиты продаж';]]>
            </search>
            <add position="after">
                <![CDATA[$_['text_instock'] = 'В наличии';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$pagination = new Pagination();]]>
            </search>
            <add position="replace">
                <![CDATA[$pagination = new Paginate();]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}
					$stock = $result['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}
                ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA['name'        => $result['name'],]]>
            </search>
            <add position="after">
                <![CDATA[
            'stock_status' => $stock,
            'novelty' => $result['novelty'],
            'bestseller' => $bestseller,
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/product/category.php">
        <operation>
            <search>
                <![CDATA[$_['text_manufacturer'] = 'Производитель:';]]>
            </search>
            <add position="after">
                <![CDATA[$_['text_instock'] = 'В наличии';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/product/ex_reviews_page.php">
        <operation>
            <search>
                <![CDATA['date_added'       => date($this->language->get('date_format_short'), strtotime($result['date_added'])),]]>
            </search>
            <add position="after">
                <![CDATA['time_added'       => date('H:i', strtotime($result['date_added'])),]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$pagination = new Pagination();]]>
            </search>
            <add position="replace">
                <![CDATA[$pagination = new Paginate();]]>
            </add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/product/extended_reviews.php">
        <operation>
            <search>
                <![CDATA[$_['heading_title']                     = 'Отзывы с фото и видео от покупателей';]]>
            </search>
            <add position="replace">
                <![CDATA[$_['heading_title']                     = 'Отзывы';]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/common/footer.php">
        <operation>
            <search>
                <![CDATA[$data['powered'] = sprintf($this->language->get('text_powered'), $this->config->get('config_name'), date('Y', time()));]]>
            </search>
            <add position="after">
                <![CDATA[$data['scripts'] = $this->document->getScripts();]]>
            </add>
        </operation>
    </file>
    <file path="catalog/model/catalog/product.php">
        <operation>
            <search>
                <![CDATA[$query = $this->db->query("SELECT op.product_id, SUM(op.quantity) AS total FROM " . DB_PREFIX . "order_product op LEFT JOIN `" . DB_PREFIX . "order` o ON (op.order_id = o.order_id) LEFT JOIN `" . DB_PREFIX . "product` p ON (op.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE o.order_status_id > '0' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' GROUP BY op.product_id ORDER BY total DESC LIMIT " . (int)$limit);]]>
            </search>
            <add position="replace">
                <![CDATA[$query = $this->db->query("SELECT pc.product_id FROM " . DB_PREFIX . "product_to_category pc LEFT JOIN `" . DB_PREFIX . "product` p ON (pc.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pc.category_id = '".(int)CATEGORY_BESTSELLER."' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' GROUP BY pc.product_id ORDER BY RAND() DESC LIMIT " . (int)$limit);]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['sku'              => $query->row['sku'],]]>
            </search>
            <add position="before">
                <![CDATA['youtube'              => $query->row['youtube'],]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[public function getProductRelated($product_id) {]]>
            </search>
            <add position="before">
                <![CDATA[
                public function getRandProductFromCategoty($category_id, $product_id = 0, $limit = 20) {
                    $product_data = array();

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_to_category pr LEFT JOIN " . DB_PREFIX . "product p ON (pr.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pr.category_id = '" . (int)$category_id . "' AND p.status = '1' AND p.product_id <> '".(int)$product_id."' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' ORDER BY RAND() DESC LIMIT " . (int)$limit);

                    foreach ($query->rows as $result) {
                        $product_data[$result['product_id']] = $this->getProduct($result['product_id']);
                    }

                    return $product_data;
                }
            ]]>
            </add>
        </operation>

        <operation>
            <search>
                <![CDATA[public function getCategories($product_id) {]]>
            </search>
            <add position="before">
                <![CDATA[
        
	public function getMainCategory($product_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_to_category WHERE product_id = '" . (int)$product_id . "' AND main_category = 1");

		return $query->row;
	}
    ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['sku'              => $query->row['sku'],]]>
            </search>
            <add position="before">
                <![CDATA['novelty'              => $query->row['novelty'],]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[public function getProductRelated($product_id) {]]>
            </search>
            <add position="before">
                <![CDATA[
	public function getProductSimilar($product_id) {
		$product_data = array();

		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_similar pr LEFT JOIN " . DB_PREFIX . "product p ON (pr.similar_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pr.product_id = '" . (int)$product_id . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

		foreach ($query->rows as $result) {
			$product_data[$result['similar_id']] = $this->getProduct($result['similar_id']);
		}

		return $product_data;
	}]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/product/product.php">
        <operation>
            <search>
                <![CDATA[$data['model'] = $product_info['model'];]]>
            </search>
            <add position="after">
                <![CDATA[$data['youtube'] = $product_info['youtube'];]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$data['model'] = $product_info['model'];]]>
            </search>
            <add position="after">
                <![CDATA[$data['novelty'] = $product_info['novelty'];]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$product_option_value_data[] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
						$option_value_keyword = false;
						$query = $this->db->query('SELECT keyword FROM oc_ocfilter_option_value WHERE value_id = ' . $option_value['option_value_id']);
						if ($query->row) $option_value_keyword = $query->row['keyword'];
            ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['option_value_id'         => $option_value['option_value_id'],]]>
            </search>
            <add position="after">
                <![CDATA[
							'keyword'              	  => $option_value_keyword,
            ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$data['options'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				$option_keyword = false;
				$query = $this->db->query('SELECT keyword FROM oc_ocfilter_option WHERE option_id = ' . $option['option_id']);
				if ($query->row) $option_keyword = $query->row['keyword'];
            ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['product_option_value' => $product_option_value_data,]]>
            </search>
            <add position="after">
                <![CDATA[
            'keyword'              => $option_keyword,
            ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$this->response->setOutput($this->load->view('product/product', $data));]]>
            </search>
            <add position="before">
                <![CDATA[
				$data['bestseller'] = false;
				foreach($this->model_catalog_product->getCategories($this->request->get['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $data['bestseller'] = true;
				}
                
			if(isset($this->request->get['ajax'])){
				return $this->response->setOutput($this->load->view('product/product_ajax', $data));
			}
            ]]>
            </add>
        </operation>


        <operation>
            <search>
                <![CDATA[$results = $this->model_catalog_product->getProductRelated($this->request->get['product_id']);]]>
            </search>
            <add position="before">
                <![CDATA[



            
			$data['catsp'] = array();

            if (isset($this->request->get['product_id'])) {
                
                $category = $this->model_catalog_product->getMainCategory($this->request->get['product_id']);
    
                if ($category) {
    
                    $results = $this->model_catalog_product->getRandProductFromCategoty($category['category_id'], $this->request->get['product_id'], 10);
    
                    foreach ($results as $result) {
                        if ($result['image']) {
                            $image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
                        } else {
                            $image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
                        }
    
                        if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
                            $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                        } else {
                            $price = false;
                        }
    
                        if ((float)$result['special']) {
                            $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                        } else {
                            $special = false;
                        }
    
                        if ($this->config->get('config_tax')) {
                            $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
                        } else {
                            $tax = false;
                        }
    
                        if ($this->config->get('config_review_status')) {
                            $rating = (int)$result['rating'];
                        } else {
                            $rating = false;
                        }
    
    
                    if ($result['quantity'] <= 0) {
                        $stock = $result['stock_status'];
                    } elseif ($this->config->get('config_stock_display')) {
                        $stock = $result['quantity'];
                    } else {
                        $stock = $this->language->get('text_instock');
                    }
                        $stock = $result['stock_status'];
                    $bestseller = false;
                    foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
                        if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
                    }
                    
                        $data['catsp'][] = array(
                            'product_id'  => $result['product_id'],
                            'thumb'       => $image,
                            'name'        => $result['name'],
    
                'stock_status' => $stock,
                'novelty' => $result['novelty'],
                'bestseller' => $bestseller,
                
                            'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
                            'price'       => $price,
                            'special'     => $special,
                            'tax'         => $tax,
                            'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
                            'rating'      => $rating,
                            'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
                        );
                    }
                }
            }

			$data['similars'] = array();

			$results = $this->model_catalog_product->getProductSimilar($this->request->get['product_id']);

		    $data['similars'] = $this->cache->get('product.similars' . (int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . $this->config->get('config_customer_group_id') . '.' . (int)$this->request->get['product_id']);

            if(empty($data['similars'])) {

                foreach ($results as $result) {
                    if ($result['image']) {
                        $image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
                    } else {
                        $image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
                    }

                    if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
                        $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                    } else {
                        $price = false;
                    }

                    if ((float)$result['special']) {
                        $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
                    } else {
                        $special = false;
                    }

                    if ($this->config->get('config_tax')) {
                        $tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
                    } else {
                        $tax = false;
                    }

                    if ($this->config->get('config_review_status')) {
                        $rating = (int)$result['rating'];
                    } else {
                        $rating = false;
                    }

                    $data['similars'][] = array(
                        'product_id'  => $result['product_id'],
                        'thumb'       => $image,
                        'name'        => $result['name'],
                        'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
                        'price'       => $price,
                        'special'     => $special,
                        'tax'         => $tax,
                        'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
                        'rating'      => $rating,
                        'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
                    );
                }
            }]]>
            </add>
        </operation>

        <operation>
            <search position="0">
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}
                ]]>
            </add>
        </operation>
        <operation>
            <search position="0">
                <![CDATA[$data['catsp'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}
					$stock = $result['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}
                ]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['name'        => $result['name'],]]>
            </search>
            <add position="after">
                <![CDATA[
            'stock_status' => $stock,
            'novelty' => $result['novelty'],
            'bestseller' => $bestseller,
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/common/cart.php">
        <operation>
            <search position="0">
                <![CDATA['cart_id'   => $product['cart_id'],]]>
            </search>
            <add position="after">
                <![CDATA['product_id'   => $product['product_id'],
            'minimum'   => $product['minimum'],]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/account/wishlist.php">

        <operation>
            <search>
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($product_info['quantity'] <= 0) {
					$stock = $product_info['stock_status'];
				} else {
					$stock = 'В наличии';
				}
					$stock = $product_info['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['model'      => $product_info['model'],]]>
            </search>
            <add position="after">
                <![CDATA[
					'novelty'     => $product_info['novelty'],
					'bestseller'  => $bestseller,
					'stock_status'=> $product_info['stock_status'],]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/product/search.php">
        <operation>
            <search>
                <![CDATA[$pagination = new Pagination();]]>
            </search>
            <add position="replace">
                <![CDATA[$pagination = new Paginate();]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} else {
					$stock = 'В наличии';
				}
					$stock = $result['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA['name'        => $result['name'],]]>
            </search>
            <add position="after">
                <![CDATA[
                    'model'      => $result['model'],
					'novelty'     => $result['novelty'],
					'bestseller'  => $bestseller,
					'stock_status'=> $result['stock_status'],]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/startup/startup.php">
        <operation>
            <search>
                <![CDATA[if (isset($this->session->data['shipping_address'])) {]]>
            </search>
            <add position="after">
                <![CDATA[
                    $this->session->data['shipping_address']['country_id'] = isset($this->session->data['shipping_address']['country_id']) && $this->session->data['shipping_address']['country_id'] ? $this->session->data['shipping_address']['country_id'] : $this->config->get('config_country_id');
                    $this->session->data['shipping_address']['zone_id'] = isset($this->session->data['shipping_address']['zone_id']) && $this->session->data['shipping_address']['zone_id'] ? $this->session->data['shipping_address']['zone_id'] : $this->config->get('config_zone_id');]]>
            </add>
        </operation>
        <operation>
            <search>
                <![CDATA[if (isset($this->session->data['payment_address'])) {]]>
            </search>
            <add position="after">
                <![CDATA[
                    $this->session->data['payment_address']['country_id'] = isset($this->session->data['payment_address']['country_id']) && $this->session->data['payment_address']['country_id'] ? $this->session->data['payment_address']['country_id'] : $this->config->get('config_country_id');
                    $this->session->data['payment_address']['zone_id'] = isset($this->session->data['payment_address']['zone_id']) && $this->session->data['payment_address']['zone_id'] ? $this->session->data['payment_address']['zone_id'] : $this->config->get('config_zone_id');]]>
            </add>
        </operation>
    </file>
</modification>
		