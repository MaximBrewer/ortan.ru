<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>Возможно, Вас заинтересует в категориях</name>
	<code>maybe-interesting</code>
	<version>1.0</version>
	<author>https://pixelmax.com</author>
	<link>https://pixelmax.com</link>
	<file path="catalog/controller/product/category.php">
		<operation>
			<search><![CDATA[$data['header'] = $this->load->controller('common/header');]]></search>
			<add position="after"><![CDATA[
			
			$this->load->model('tool/image');
            
			$data['maybe_interesting'] = array();

			$cat_id = $category_id;

			do {
				$category = $this->model_catalog_category->getCategory($cat_id);
				if($category['parent_id'] == 59) break;
			}
			while($cat_id = $category['parent_id']);
			
			if ($category) {

				$results = $this->model_catalog_product->getRandProductFromCategoty($category['category_id'], $this->request->get['product_id'], 12);

				foreach ($results as $result) {
					if ($result['image']) {
						$image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
					} else {
						$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
					}

					if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
						$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					} else {
						$price = false;
					}

					if ((float)$result['special']) {
						$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
					} else {
						$special = false;
					}

					if ($this->config->get('config_tax')) {
						$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
					} else {
						$tax = false;
					}

					if ($this->config->get('config_review_status')) {
						$rating = (int)$result['rating'];
					} else {
						$rating = false;
					}


				if ($result['quantity'] <= 0) {
					$stock = $result['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$stock = $result['quantity'];
				} else {
					$stock = $this->language->get('text_instock');
				}
					$stock = $result['stock_status'];
				$bestseller = false;
				foreach($this->model_catalog_product->getCategories($result['product_id']) as $cat){
					if($cat['category_id'] == (int)CATEGORY_BESTSELLER) $bestseller = true;
				}
				
					$data['maybe_interesting'][] = array(
						'product_id'  => $result['product_id'],
						'thumb'       => $image,
						'name'        => $result['name'],

			'stock_status' => $stock,
			'novelty' => $result['novelty'],
			'bestseller' => $bestseller,
			
						'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
						'price'       => $price,
						'special'     => $special,
						'tax'         => $tax,
						'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
						'rating'      => $rating,
						'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
					);
				}
			}

            ]]>			</add>
		</operation>
	</file>
</modification>
		